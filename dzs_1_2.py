"""
Напишите программу для проверки истинности утверждения
¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
¬ = это not
⋁ = это or
⋀ = это and
"""


# Генерируем наборы данных для дальнейшего сравнения
def Numbers(i,j):
    for x in range(i, j):
        for y in range(i, j):
            for z in range(i, j):
                yield x, y, z

# Аргументы функции Numbers расширяют диапазон исследования
for num in Numbers(0,2):
     pred_l = not (num[0] or num[1] or num[2])
     pred_r = not num[0] and not num[1] and not num[2]

     if pred_l == pred_r:
         print(f"Утверждение ¬({num[0]} ⋁ {num[1]} ⋁ {num[2]}) ="
               f" ¬{num[0]} ⋀ ¬{num[1]} ⋀ ¬{num[2]}  истинно")
     else:
       print(f"Утверждение ¬({num[0]} ⋁ {num[1]} ⋁ {num[2]}) ="
             f" ¬{num[0]} ⋀ ¬{num[1]} ⋀ ¬{num[2]}    ложно")


# Утверждение ¬(0 ⋁ 0 ⋁ 0) = ¬0 ⋀ ¬0 ⋀ ¬0  истинно
# Утверждение ¬(0 ⋁ 0 ⋁ 1) = ¬0 ⋀ ¬0 ⋀ ¬1  истинно
# Утверждение ¬(0 ⋁ 1 ⋁ 0) = ¬0 ⋀ ¬1 ⋀ ¬0  истинно
# Утверждение ¬(0 ⋁ 1 ⋁ 1) = ¬0 ⋀ ¬1 ⋀ ¬1  истинно
# Утверждение ¬(1 ⋁ 0 ⋁ 0) = ¬1 ⋀ ¬0 ⋀ ¬0  истинно
# Утверждение ¬(1 ⋁ 0 ⋁ 1) = ¬1 ⋀ ¬0 ⋀ ¬1  истинно
# Утверждение ¬(1 ⋁ 1 ⋁ 0) = ¬1 ⋀ ¬1 ⋀ ¬0  истинно
# Утверждение ¬(1 ⋁ 1 ⋁ 1) = ¬1 ⋀ ¬1 ⋀ ¬1  истинно

# Признаться не смог получить ложного срабатывания
